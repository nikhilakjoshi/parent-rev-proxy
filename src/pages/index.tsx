import Head from "next/head";
import { Rubik } from "next/font/google";
import clsx from "clsx";
import dynamic from "next/dynamic";
import { useCallback, useEffect, useState } from "react";

const MyIframe = dynamic(() => import("./../components/iframe"), {
  ssr: false,
  loading: () => <p>Loading...</p>,
});

const font = Rubik({
  subsets: ["latin-ext"],
});

export default function Home() {
  const [show, setShow] = useState(false);
  const triggerHello = useCallback(async () => {
    const resp = await fetch("/api/hello", {
      method: "POST",
    });
    const json = (await resp.json()) as { message: string };
  }, []);
  useEffect(() => {
    setTimeout(() => {
      setShow(true);
    }, 1000);
  }, []);
  return (
    <div>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={clsx("flex min-h-screen flex-col", font.className)}>
        <nav className="bg-sky-100 px-20 py-4">
          <h2 className="text-xl font-semibold">
            Parent App -{" "}
            <span className="inline-block rounded bg-gray-300 px-2 py-0.5 font-mono text-gray-700">
              Reverse Proxy
            </span>
          </h2>
        </nav>
        <section className="flex grow flex-col bg-green-50 px-20 py-4">
          <div className="my-4 flex items-center gap-8">
            <button
              onClick={() => {
                triggerHello()
                  .then(() => console.log("triggered"))
                  .catch((e) => console.error(e));
              }}
              className="rounded bg-purple-500 px-2 py-1 text-white hover:bg-purple-700"
            >
              Trigger API from Parent
            </button>
            <div>
              Request should not have cookie header as calls are going to
              <span className="inline-block rounded bg-gray-600 px-2 py-0.5 font-mono text-white">
                /api/*
              </span>
            </div>
          </div>
          {show && <MyIframe />}
        </section>
      </main>
    </div>
  );
}
